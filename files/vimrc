set nocompatible          " We're running Vim, not Vi!
filetype off
filetype plugin indent on

set rtp+=~/.vim/bundle/vundle
call vundle#rc()

Bundle 'gmarik/vundle'
Bundle 'scrooloose/syntastic'
Bundle 'tpope/vim-fugitive'
Bundle 'tpope/vim-surround'
Bundle 'kchmck/vim-coffee-script'
Bundle 'bling/vim-airline'
Bundle 'tomtom/tcomment_vim'
Bundle 'ervandew/supertab'
Bundle 'Lokaltog/vim-easymotion'
Bundle 'kien/ctrlp.vim'
Bundle 'tomasr/molokai'
Bundle 'tpope/vim-rails'
Bundle 'scrooloose/syntastic'
Bundle 'cakebaker/scss-syntax.vim'

color molokai
syntax enable
set t_Co=256
set shell=$SHELL

au BufNewFile,BufRead *.ejs set filetype=eruby
au BufNewFile,BufRead *.coffee set filetype=coffee
au BufNewFile,BufRead *.scss set filetype=sass
au BufNewFile,BufRead *.zsh-theme set filetype=sh

function! RunSingleSpec()
  let spec_file="" . bufname("%") . ":" . line(".")
  let g:last_spec=spec_file
  execute ":w"
  execute ":silent !echo '" . spec_file .  "' >/tmp/rspecs &>/dev/null &" | redraw!
endfunction

function! RunSpecFile()
  let spec_file="" . bufname("%")
  let g:last_spec=spec_file

  execute ":w"
  execute ":silent !echo '" . spec_file . "' >/tmp/rspecs  &>/dev/null &" | redraw!
endfunction

function! RunLastSpec()
  if exists("g:last_spec")
    execute ":silent !echo '" . g:last_spec . "' >/tmp/rspecs  &>/dev/null &" | redraw!
  else
    echo ">> No last spec to run!"
  endif
endfunction

map <leader>r :call RunSingleSpec()<CR>
map <leader>R :call RunSpecFile()<CR>
map <leader>t :call RunLastSpec()<CR>

xnoremap p pgvy

set nowrap

" use indents of 2 spaces, and have them copied down lines:
set expandtab
set tabstop=2
set softtabstop=2
set shiftwidth=2

" Open new horizontal split windows below current
" Open new vertical split windows to the right
set splitbelow
set splitright

set laststatus=2
set statusline=\ "
set statusline+=%f\ " file name
set statusline+=[
set statusline+=%{strlen(&ft)?&ft:'none'} " filetype
set statusline+=]
set statusline+=%h%1*%m%r%w%0* " flag
set statusline+=%= " right align
set statusline+=%-14.(%l,%c%V%)\ %<%P " offset

" Show eol/tabs etc
set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<
set list

" kill trailing spaces when exiting file
autocmd BufWritePre * :%s/\s\+$//e

" UTF-8 All the way
scriptencoding utf-8

" Use the tab complete menu
set wildmenu

" Search Config

" show the `best match so far' as search strings are typed:
set incsearch

" assume the /g flag on :s substitutions to replace all matches in a line:
set gdefault

" Highlight ruby operators
let ruby_operators = 1

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" ARROW KEYS ARE UNACCEPTABLE
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
map <Left> <Nop>
map <Right> <Nop>
map <Up> <Nop>
map <Down> <Nop>

let &colorcolumn="80"

highlight ColorColumn ctermbg=125 ctermfg=white

" Only highlight the current window
autocmd WinLeave * let &colorcolumn=0
autocmd WinEnter * let &colorcolumn="80"

hi StatusLine   ctermbg=white ctermfg=125
hi StatusLineNC ctermbg=247 ctermfg=234
hi Normal       ctermfg=252 ctermbg=none
hi Visual       ctermbg=54

set number
set nolazyredraw

" Setup backup folders
set backupdir=/tmp/     " Where backups will go.
set directory=/tmp/     " Where temporary files will go.
set undodir=/tmp/
